AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
    content-sharing-app

    Sample SAM Template for content-sharing-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
    Function:
        Timeout: 3
        MemorySize: 128

        Tracing: Active
    Api:
        TracingEnabled: true
        Cors:
            AllowMethods: "'GET,POST,OPTIONS,PUT,DELETE'"
            AllowHeaders: "'content-type'"
            AllowOrigin: "'*'"
Resources:
    GetTextFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: handler/
            Handler: getText.lambda_handler
            Runtime: python3.9
            Architectures:
                - x86_64
            Events:
                GetText:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /text
                        Method: get
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: '*'

    PostTextFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: handler/
            Handler: postText.lambda_handler
            Runtime: python3.9
            Architectures:
                - x86_64
            Events:
                PostText:
                    Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
                    Properties:
                        Path: /text
                        Method: post
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: '*'

    UploadEventFunction:
        Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
        Properties:
            CodeUri: handler/
            Handler: uploadEvent.lambda_handler
            Runtime: python3.9
            Architectures:
                - x86_64
            Events:
                FileUpload:
                    Type: S3
                    Properties:
                        Bucket: !Ref ContentSharedAppUploadsBucket
                        Events: s3:ObjectCreated:*
            Policies:
                - DynamoDBCrudPolicy:
                      TableName: '*'

    SharedSpaceDynamoDBTable:
        Type: AWS::DynamoDB::Table
        Properties:
            TableName: SharedSpaceTextTable
            AttributeDefinitions:
                - AttributeName: sid
                  AttributeType: S
            KeySchema:
                - AttributeName: sid
                  KeyType: HASH
            BillingMode: PAY_PER_REQUEST # This indicates on-demand capacity
            TimeToLiveSpecification: # This specifies the TTL attribute
                AttributeName: expire
                Enabled: true

    SharedSpaceUploadDynamoDBTable:
        Type: AWS::DynamoDB::Table
        Properties:
            TableName: SharedSpaceUploadTable
            AttributeDefinitions:
                - AttributeName: sid
                  AttributeType: S
            KeySchema:
                - AttributeName: sid
                  KeyType: HASH
            BillingMode: PAY_PER_REQUEST # This indicates on-demand capacity
            TimeToLiveSpecification: # This specifies the TTL attribute
                AttributeName: expire
                Enabled: true

    ContentSharedAppUploadsBucket:
        Type: AWS::S3::Bucket
        Properties:
            BucketName: content-shared-app-uploads
            PublicAccessBlockConfiguration:
                BlockPublicAcls: false
                IgnorePublicAcls: false
                BlockPublicPolicy: false
                RestrictPublicBuckets: false
            BucketEncryption:
                ServerSideEncryptionConfiguration:
                    - ServerSideEncryptionByDefault:
                          SSEAlgorithm: AES256

    BucketPolicy:
        Type: AWS::S3::BucketPolicy
        Properties:
            PolicyDocument:
                Id: ContentSharedAppUploadsBucketPolicy
                Version: '2012-10-17'
                Statement:
                    - Sid: AllowPublicRead
                      Effect: Allow
                      Principal: '*'
                      Action: 's3:GetObject'
                      Resource: !Sub 'arn:aws:s3:::content-shared-app-uploads/*'
                    - Sid: AllowPublicPut
                      Effect: Allow
                      Principal: '*'
                      Action: 's3:PutObject'
                      Resource: !Sub 'arn:aws:s3:::content-shared-app-uploads/*'
            Bucket: !Ref ContentSharedAppUploadsBucket
