AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  content-sharing-app

  Sample SAM Template for content-sharing-app

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

    Tracing: Active
  Api:
    TracingEnabled: true
    Cors:
      AllowMethods: "'GET,POST,OPTIONS,PUT,DELETE'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"
Resources:
  GetTextFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handler/text
      Handler: get.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        GetText:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /text
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'

  PostTextFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handler/text
      Handler: post.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        PostText:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /text
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'

  PostFileKeyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handler/file
      Handler: post_key.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        PostText:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /file/key
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'

  GetFileListFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handler/file
      Handler: get_list.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        GetText:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /file/list
            Method: get
      Policies:
        - DynamoDBCrudPolicy:
            TableName: '*'

  GetFileRetrieveSignedUrlFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handler/file
      Handler: get_retrieve-signed-url.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        GetText:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /file/retrieve/signed-url
            Method: get
      Policies:
        - S3FullAccessPolicy:
            BucketName: 'content-shared-app-uploads'

  GetFileUploadSignedUrlFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: handler/file
      Handler: get_upload-signed-url.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        GetText:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /file/upload/signed-url
            Method: get
      Policies:
        - S3FullAccessPolicy:
            BucketName: 'content-shared-app-uploads'

  #-------------------DynamoDB Tables-----------------------------

  SharedSpaceDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SharedSpaceTextTable
      AttributeDefinitions:
        - AttributeName: sid
          AttributeType: S
      KeySchema:
        - AttributeName: sid
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3
      TimeToLiveSpecification: # This specifies the TTL attribute
        AttributeName: expire
        Enabled: true

  SharedSpaceFileDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: SharedSpaceFileTable
      AttributeDefinitions:
        - AttributeName: sid
          AttributeType: S
        - AttributeName: key
          AttributeType: S
      KeySchema:
        - AttributeName: sid
          KeyType: HASH
        - AttributeName: key
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 3
        WriteCapacityUnits: 3
      TimeToLiveSpecification: # This specifies the TTL attribute
        AttributeName: expire
        Enabled: true

  #-------------------------------S3 Bucket----------------------------

  ContentSharedAppUploadsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: content-shared-app-uploads
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - '*'
            MaxAge: 3000
